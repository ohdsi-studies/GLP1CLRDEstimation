CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45774440,44816330,40170910,1583722,793143,44506750)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45774440,44816330,40170910,1583722,793143,44506750)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (44820680,44821790,44832190,44832190,44824070,44822930,44831050,44819500,44822940,44820680,44832190,44820680,44836920,44833370,44825260,44819500,44822940,44834550,44829880,44819500,1567940,1567950,45561950,1567952,45533020,45552380,45547620,45600640,37200190,37200200,37200200,37200190,37200200,45576440,45552380,45576440,45600640,45542740,45547620,45595800,45605400,45533020,1567955,45552380,35206880,45600640,1567941,45557110,45600640,1567942,1567945,45595790,37200140,37200140,37200140,37200140,45591030,37200150,37200150,37200150,37200150,1567946,45561950,37200150,37200150,37200150,37200150,45605400,37200160,37200150,37200150,37200160,1567949,1567943,1567954,45581350,45537960,45600640,45586140,45576440,45547620,45566730,45581350,45547620,1567951,35206880,45557110,1567948,37200180,37200180,37200180,37200180,37200180,45576440,37200170,37200170,37200170,37200170,45571650,37200190,37200190,37200190,37200190,37200170,37200170,37200170,37200170,37200170,37200170,37200180,37200180,37200180,37200180,1567947,45595790,37200160,37200160,37200160,37200160,45537960,37200160,37200160,37200160,37200160,1567953,37200180,37200190,37200190,37200190,37200190,35206880,1567944,45552380,45542740)

) I
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (44831390,44823250,44823250,44822100,44831390,44829120,1571690,1571692,37200980,45539110,45563060,45582460,1571691,37200980,45553480,45582460,45558220,37200980,1571693,45572770,45582460,45592200,44829590,45600360)

) I
) C UNION ALL 
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (44836910,44836920,44836920,44824070,44829880,44824070,44828800,44833370,44819500,44829880,44826460,44832190,44831050,44826460,44827620,44833370,44831050,44832190,44827620,44829880,1567956,1567966,45533020,1567968,45537960,45595800,45595800,45547630,37200250,37200250,37200250,37200250,37200250,45547630,45591030,45600640,45605400,45533020,45533020,45557110,45581360,45605410,1567957,45586140,45542740,1567971,45561950,35206880,45591030,1326491,1326493,1326492,1567958,1567961,45552390,37200200,37200200,37200200,37200200,45581350,37200200,37200200,37200200,37200210,1567962,45537960,37200210,37200210,37200210,37200210,45591030,37200210,37200210,37200210,37200210,1567965,1567959,1567970,45576440,45586140,45605400,45605400,45533020,45566730,45547630,45600640,45595800,1567967,35206880,45533020,1567964,37200240,37200240,37200240,37200240,37200240,45591030,37200220,37200220,37200220,37200230,45552390,37200250,37200250,37200250,37200250,37200230,37200230,37200230,37200230,37200230,37200230,37200230,37200230,37200230,37200240,1567963,45557110,37200220,37200220,37200210,37200220,45605400,37200220,37200220,37200220,37200220,1567969,37200240,37200240,37200240,37200240,37200250,35206880,1567960,45581350,45581350)

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (44826680,44821990,44823140,44832420,1569492,44827820,45562460,45572170,44826680,45562460,44834770,44820890,35208010,35208020,44829010,44820890,44829010,44831280,44837140,44820890,35208030,35208020,35208020,44826680,44833610,45586680,1569486,44829010,44827820,35208020,45586670,44826680,44832420,44824290,44831280,44824290,44831280,44824290,44837140,44834770,45572170,45548120,45572170,45572170,45581860,45576950,45548120,45576950,35208020,45591560,45601130,45543270,45557630,35208020,44837130,44829010,44825470,44821990,44832420,1569489,45572170,1569491,44835980,1569487,44826680,35208020,44830120,35208020,45591560,45567270,45567270,45581860,1569485,35208010,44832420,35208020,1569490,45562460,45601130,45543270,44830110,35208020)

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (1105775,1140088,19049820,1237049,1154161,1111706,1147878,1115572,939259,902938,1196514,1149380,905233,1111220,1196677,40240660,45775120,1137529,43532540,1154343,1236744,1138050,1192218,1123995,1125449,1112921,42873640,1106776,1110942,1152631,1114620,19027190,1551099,1506270,1550557,1518254,1507705,975125,40236900)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (1105775,1140088,19049820,1237049,1154161,1111706,1147878,1115572,939259,902938,1196514,1149380,905233,1111220,1196677,40240660,45775120,1137529,43532540,1154343,1236744,1138050,1192218,1123995,1125449,1112921,42873640,1106776,1110942,1152631,1114620,19027190,1551099,1506270,1550557,1518254,1507705,975125,40236900)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (40166040,40239220,43013880,1580747)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (40166040,40239220,43013880,1580747)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (36175770,36175770,36477240,36478590,36480220,36480550,36496800,36497060,42822510,42822520,42824500,42845680,44409170,44412080,44416020,44416030,44417560,44422640,44423040,44429830,44432560,44434910,44440710,44441900,44443490,44450090,44450090,44451500,44451650,44460850,44462190,44462340,44463170,44463290,44464020,44464160,44465210,44465610,44465680,44466090,44466580,44466620,44466630,44837920,44839100,44839100,44843360,44843360,44843380,44843400,44843410,44843420,44843420,44843420,44843420,44843420,44843430,44843430,44843480,44843480,44843480,44843490,44843490,44845980,44846190,44849230,44849450,44850500,44850620,44853790,44854930,44855080,44855080,44855120,44855120,44855120,44856270,44860560,44860590,44860610,44860610,44860660,44860670,44860670,44860680,44860680,44860680,44860680,44860680,44860680,44860690,44860690,44860690,44860690,44861250,44863170,44863170,44863170,44865390,44866360,44866380,44866720,44867550,44867590,44867670,44871870,44871870,44871870,44871930,44871950,44871950,44871980,44872620,44872620,44877630,44877650,44877660,44877660,44877680,44877680,44877680,44877680,44877690,44877760,44877760,44877760,44877760,44877760,44877760,44877760,44877770,44877770,44880210,44880220,44889140,44889150,44889150,44889210,44889220,44889260,44889260,44889260,44892260,44894730,44894740,44894750,44894760,44894770,44894780,44894780,44894830,44894850,44894850,44894850,44894850,44894860,44895470,44897440,44897440,44897440,44897650,44901010,44901990,44902020,44905850,44905920,44906350,44906400,44906440,44906490,44906490,44906490,44906510,44907730,44907740,44907740,44911950,44911950,44911950,44911970,44911980,44911990,44911990,44911990,44911990,44912040,44912060,44912060,44912060,44914500,44914500,44914500,44914500,44914510,44915560,44916750,44919030,44919060,44923220,44923290,44923390,44923390,44923390,44923430,44924600,44924600,44924600,44926290,44928870,44928890,44928890,44928890,44928900,44928970,44928970,44928970,44928990,44928990,44928990,44928990,44929000,44929000,44931520,44931530,44931530,44933690,44934690,44935110,44936050,44940400,44940400,44940480,44940480,44945820,44945830,44945840,44945840,44945850,44945860,44945870,44945870,44945880,44945880,44945930,44945950,44945950,44945950,44945950,44945960,44945960,44945960,44945960,44948380,44948380,44948380,44948390,44950600,44951530,44952170,44952170,44953930,44954470,44957040,44957070,44957170,44957190,44958000,44958350,44962570,44962590,44962590,44962600,44962600,44962600,44962600,44962620,44962620,44962630,44962670,44962670,44962680,44962690,44962690,44962690,44962690,44962690,44965120,44965120,44965120,44965130,44965310,44968330,44969700,44974040,44974050,44974070,44974070,44974100,44974200,44974200,44974200,44975370,44975370,44979620,44979630,44979650,44979650,44979660,44979660,44979670,44979670,44979670,44979670,44979670,44979710,44979710,44979720,44979720,44979730,44979730,44979730,44979730,44979730,44980310,44982200,44982400,44983610,44984380,44984380,44985720,44990520,44990560,44990930,44991100,44991110,44991110,44991890,44996490,44996500,44996510,44996510,44996510,44996520,44996560,44996560,44996620,44996630,44996630,44996630,44996640,44996640,44998360,44998360,44999140,44999140,44999140,45003700,45004690,45008020,45008020,45008060,45009060,45013620,45013620,45013640,45013640,45013660,45013670,45013670,45013670,45013680,45013680,45013720,45013740,45013740,45013740,45013740,45013740,45013740,45013740,45013750,45013750,45013750,45013750,45016320,45016320,45016320,45016330,45020050,45020820,45022560,45025210,45025370,45025410,45025420,45025420,45026280,45026280,45026650,45026650,45030950,45030960,45030970,45030990,45030990,45031000,45031000,45031000,45031060,45031060,45031060,45031060,45031070,45031070,45033510,45033510,45033510,45033510,45033510,45033510,45037340,45041880,45042280,45042340,45042360,45042460,45042460,45042460,45043620,45043620,45043630,45047840,45047890,45047890,45047890,45047890,45047890,45047930,45047940,45047940,45047940,45047950,45047970,45047970,45047970,45047970,45047970,45047970,45047980,45047980,45047980,45050460,45050460,45050460,45054910,45054960,45055020,45059500,45059550,45059600,45060410,45060780,45060780,45060780,45064910,45064930,45064930,45064950,45064950,45064950,45064950,45064980,45065000,45065010,45065010,45065010,45065010,45066780,45067610,45067610,45067610,45067610,45069830,45070910,45072110,45076520,45076610,45076640,45077820,45082010,45082010,45082020,45082040,45082040,45082040,45082040,45082060,45082060,45082060,45082070,45082120,45082140,45082140,45083740,45084490,45084490,45084500,45088360,45088980,45089060,45090200,45090710,45093380,45093540,45093570,45093580,45093590,45094710,45094710,45094720,45098960,45098970,45098970,45098970,45098970,45098970,45098990,45098990,45099000,45099000,45099060,45099080,45099080,45099080,45099080,45099080,45099080,45099080,45099090,45099630,45100700,45101500,45104660,45104770,45105970,45106010,45110410,45110580,45110590,45110590,45110590,45110590,45111190,45111190,45111840,45111840,45111840,45111840,45115950,45115970,45115970,45115990,45115990,45116050,45116060,45116060,45116080,45116080,45116080,45116080,45116080,45116080,45116090,45116090,45116090,45116090,45116690,45117940,45118540,45118540,45121740,45127390,45127390,45127390,45128600,45128600,45132890,45132890,45132890,45132890,45132890,45132890,45132940,45132940,45132950,45132960,45132960,45132960,45135400,45135400,45135400,45135410,45135600,45143800,45144190,45144260,45144290,45144380,45144380,45144400,45144960,45145590,45145590,45149840,45149880,45149880,45149900,45149900,45149910,45149910,45149910,45149950,45149960,45149960,45149960,45149980,45149980,45149980,45149980,45149990,45149990,45151400,45152450,45152450,45160970,45161480,45162710,45162720,45162720,45167080,45167080,45167100,45167100,45167110,45167110,45167120,45167120,45167130,45167130,45167140,45167180,45167180,45167190,45167190,45167190,45167200,45167200,45167220,45167220,45167220,45167220,45167220,45167220,45167230,45169710,45169720,45172970,45174210,45175290,45175290,45178430,45178530,45178530,45178530,45178530,45179760,45184000,45184010,45184020,45184020,45184040,45184050,45184050,45184050,45184060,45184060,45184100,45184120,45184130,45184130,45184130,45184130,45184130,45184130,45184130,45184480,45186580,45186580,45186580,45186580,45186580,45186590,45186590,45189860,45189880,45190420,45191150,45195440,45195550,45195590,45195600,45195640,45195670,45195670,45196460,45196830,45198650,45201200,45201220,45201230,45201230,45201230,45201260,45201260,45201310,45201310,45201310,45201320,45201340,45201340,45201340,45201340,45201350,45201350,45201350,45201360,45201360,45203780,45203790,45203790,45203790,45203790,45203790,45207100,45207140,45207340,45207350,45207540,45207570,45212910,45212910,45212910,45214090,45218300,45218310,45218330,45218350,45218350,45218350,45218390,45218400,45218400,45218400,45218400,45218410,45218410,45218420,45218420,45218420,45218420,45218420,45218430,45218740,45221010,45221210,45223220,45225530,45229600,45230030,45230050,45230100,45230100,45230150,45230160,45230160,45235580,45235600,45235610,45235610,45235620,45235620,45235620,45235650,45235660,45235670,45235690,45235690,45235690,45235690,45235690,45235690,45235690,45235690,45235700,45235700,45238170,45238170,45241670,45246560,45246930,45246990,45247030,45247030,45247110,45247110,45247110,45248300,45248300,45252600,45252630,45252650,45252660,45252660,45252660,45252690,45252710,45252730,45252730,45252730,45252730,45252730,45253020,45255270,45255270,45255270,45255270,45255270,45258480,45258770,45259730,45264180,45264230,45264280,45264320,45265490,45269760,45269770,45269780,45269790,45269800,45269800,45269810,45269810,45269820,45269820,45269820,45269820,45269820,45269820,45269870,45269880,45269880,45269890,45269890,45269890,45269890,45270450,45270450,45271560,45271560,45271560,45271560,45272340,45272340,45272340,45272350,45272350,45276120,45281130,45281130,45281260,45281280,45281330,45281330,45281330,45281340,45282160,45282540,45282540,45286810,45286820,45286830,45286850,45286850,45286860,45286910,45286930,45286930,45286940,45289440,45289440,45289440,45289440,45289450,45289450,45289640,45291680,45293110,45298270,45298380,45299690,45299690,45303840,45303850,45303850,45303860,45303870,45303870,45303870,45303880,45303880,45303900,45303900,45303950,45303970,45303970,45303970,45303970,45303970,45303970,45303970,45303980,45303980,45304520,45305660,45306430,45306430,45306440,45308640,45309660,45310050,45310120,45310180,45310200,45310930,45315390,45315440,45315480,45316670,45316680,45320860,45320870,45320880,45320880,45320880,45320890,45320910,45320910,45320910,45320910,45320910,45320960,45320960,45320970,45320980,45320980,45320990,45320990,45320990,45323440,45323440,45323440,45323440,45323440,45326660,45326990,45327150,45331890,45332230,45332270,45332320,45332320,45332410,45332410,45337910,45337940,45337940,45337940,45337960,45337960,45337960,45337960,45337970,45338010,45338030,45338030,45338030,45338040,45338040,45338040,45338040,45338040,45338040,45341850,45343960,45344900,45344940,45345000,45349390,45349400,45349490,45349500,45350650,45354950,45354950,45354960,45354990,45354990,45355010,45355010,45355020,45355020,45355070,45355090,45355100,45355100,45355110,45355110,45355110,45355110,45355110,45355110,45357590,45357590,45357590,45357590,45357590,45357790,45362010,45363220,45365910,45366370,45366410,45366450,45366450,45371820,45371850,45371900,45371910,45371910,45371920,45371920,45371920,45371920,45371920,45371920,45372530,45373710,45374490,45374500,45374500,45377770,45377780,45377780,45377810,45378300,45378450,45379130,45383000,45383000,45383500,45383570,45860260,45868620,45870750,45871590,45871600,45873700,46249590,46250050,46253040,46253320,46254610,46255370,46255960,46365280,45298470,36493740,44873250,43051320,45244700,36197670,45872090,45310330,45293210,36194950,36191610,45178000,36108960,45264350,44460930,36094960,44433490,44988730,45863190,44467350,36197670,46252360,45227670,45057020,44413260,36493740,45861480,772877,45310330,43051150,45232650,36497570,44991110,44966720,42508700,45317990,44963460,36194950,44441840,36988410,45867310,45804430,44889290,44855920,35530780,45227670,36089890,45350290,45875880,42508700,35529320,45195640,42655380,44980490,45128600,35520140,45141880,45144380,45196840,35523710,42867290,45867730,45304720,1393750,45231330,44441900,46253740,42508310,45104230,36492980,36092260,1788974,44857630,42822510,37618200,37296970,36108960,35504820,35107420,45849640,42655390,44975010,44416420,37407400,36197670,44467710,36918580,45008200,45232650,45027210,44924610,44907740,44476110,44476110,42663270,44476110,737522,42868290,35107410,45161520,42508310,45014540,44855150,42835160,1221357,44890470,44476940,45350660,45355850,44476110,44838740,45747160,45264330,36175770,42868290,45873700,44907370,44957150,36664460,35110460,45076660,45129940,44883950,35110460,45282540,36109520,45167900,45091080,36494000,35110460,45321760,35524540,45282540,43051150,45025420,43051150,35110460,46250070,45026280,37618260,35110460,35107420,35504980,45366470,36493020,42835180,45248300,45091080,44476110,36665990,36493980,44946670,35520850,45179760,36477980,44901010,45123140,1393520,44439170,42868020,45264330,45230850,42833610,46366000,45205410,42868020,45161540,45195640,1566874,35520800,44856270,36109520,45315470,45196840,45867330,37618200,42845680,45094720,1372087,45264330,45026650,44906520,43051150,45366450,44852640,36175770,44886890,45196840,45299310,44440560,45076640,36478940,44872870,45184890,44467220,45746780,44925900,45020040,1723408,35110460,45832210,44461820,36177800,42508030,44856270,44412300,45212910,45832210,42508700,36194950,45333600,45849640,45292650,37315010,46245010,45333600,42833650,44869680,44974200,42508700,44856270,42845680,44467350,36699080,45231330,44872870,45086850,37292310,45094720,37292310,35505010,45327080,44904020,35110460,35107410,737828,45832210,42653830,45111850,771773,42867300,45849600,45110590,45076640,42508310,45214090,1566137,45093570,45867310,37618260,36095160,35110460,1724025,1566875,45164180,44467150,43051330,45901320,45746710,45264320,45247110,45247110,42508700,42508300,37298950,1724026,750228,44889260,45002940,43051330,45355850,45079130,45062050,45746710,42822520,45314920,45093570,37618210,36492980,36109510,36988400,45316680,44866920,45248300,45167960,45349500,45299690,45874400,42508700,37618200,45849640,45332430,44874680,35524550,1185277,44968730,36918060,45214090,45002890,44840390,35107410,44476110,44839100,35107410,45060790,44872080,36194950,44431050,44957170,45281330,37315010,45093600,1723313,37618260,45071290,45266020,36109520,46365150,45190190,45110590,771775,46251890,45150840,45162340,42822610,972215,45127390,45215440,44441890,45017950,44476940,771774,36698430,45224570,42835140,45146960,45001570,45108120,44983780,44952910,45904000,44464600,37618260,44448580,42508310,45164130,44781070,45898010,45128600,36493020,45804430,46254520,45213740,45249630,583566,45128600,45095320,45125010,45009060,44467150,45325050,45241830,44467150,44974200,44907740,44895670,45352020,44991380,45804430,36493860,45253480,44921010,37618210,45028010,37315020,46245000,45196840,36497570,776566,45181050,44476110,44873250,1219119,45349470,36493740,36480250,36197670,45060780,45335020,45247110,42868020,45865870,45747160,44428340,35504700,973358,44476110,44891080,45120930,45868350,44444700,44986890,45077820,45224620,45074160,44448730,772322,36096950,46250050,1723407,45000810,45178530,1162611,45213740,45849640,44461050,44416030,1162126,772862,45125010,44886880,45010810,44855290,1724027,45025410,45298470,1788521,35504820,44872050,45196840,45294210,45093570,35525060,46366000,45111850,42867300,45378300,44840390,1372062,45096070,36189270,45110590,44900970,35531130,44413210,44439170,45137790)

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (1529331,1530014,44816330,43013880,43526470,44785830,45774440,45774750,793293,1583722,1597756,1560171,1559684,40239220,40170910,44506750,1503297,1510202,1502826,1525215,1517998,1516766,1547504,40166040,793143,1580747,1502809,1502855,1515249,19122140,19122120,1550023,1502905,1516976,35602720,35605670,42899450,46221580,1544838,1513849,1586369,1562586,1567198,1596977,1586346,19013950,35198100,1590165,1513876,1513843,1588986,1531601,19091620,19090190,19090180,19090250,19090230,19013930,19090200,19090230,19090240,19090250,19090220,35884380)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (1529331,1530014,44816330,43013880,43526470,44785830,45774440,45774750,793293,1583722,1597756,1560171,1559684,40239220,40170910,44506750,1503297,1510202,1502826,1525215,1517998,1516766,1547504,40166040,793143,1580747,1502809,1502855,1515249,19122140,19122120,1550023,1502905,1516976,35602720,35605670,42899450,46221580,1544838,1513849,1586369,1562586,1567198,1596977,1586346,19013950,35198100,1590165,1513876,1513843,1588986,1531601,19091620,19090190,19090180,19090250,19090230,19013930,19090200,19090230,19090240,19090250,19090220,35884380)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (35209480,35209380,45582410,45587240,35209330,37200890,35209390,1571583,45539080,1571599,45592170,45567870,37200910,37200910,37200910,37200910,45606510,45587260,1571572,37200910,37200910,37200910,37200910,37200910,45582410,1567852,44825280,35206740,44833390,45587250,44828910,44826580,1571496,45592130,45572700,44834830,44830170,44829060,44831320,44825540,44824340,44820970,35209370,1571485,44833660,35209270,44826730,35209270,44837190,44837190,44833660,35209270,44820970,35209270,1571469,35209170,35209170,35209170,35209170,35209170,35209170,35209170,35209170,35209170,35209170,45558170,35209370,45600900,45605660,45543020,45576710,45547850,1571520,45601730,45567840,35209250,45577540,1571556,45582420,35209380,35209390,45606500,44828910,44837040,44830010,45601730,35208270,45538160,45557270,45538160,45586330,45571850,45562120,45595970,45566910,44824100,35206770,44828820,35209470,35209260,45601740,44827640,44819610,44823050,35207870,44832400,35209490,35209360,45553440,35209350,35209460,37200880,44833390,45606490,45558160,1571529,45543880,45601730,45587240,45563020,45534130,35209340,45543880,35209260,45587250,45572720,45563030,1571544,1571518,45601730,45539050,44829910,44830180,35209310,35209310,35209310,44820430,45566480,44821550,35225410,35208430,35209290,35209290,35209280,1571487,35209280,1571488,35209290,35209330,35209280,35209290,45572720,44833470,44830010,35207510,44827700,44827720,45601750,37200930,1568676,44825360,44832310,44837030,44821870,44821880,44820790,44824180,44828910,44837040,44820790,44824180,44831160,44825540,44837190,44837190,44825540,44831330,44831330,44831330,44824340,44837190,35209370,44833480,44826580,44828910,1571486,44830170,35209270,35209280,35209280,35209280,35209280,44837190,44827890,44830170,44820970,44837190,44836040,35209280,1571472,35209200,35209200,35209200,35209200,35209200,35209200,35209200,35209200,35209200,35209200,35209250,45548680,35209370,44826870,1571521,45567840,45601730,45582420,1571557,45543890,1571477,35209250,44825360,44833470,37200880,37200610,45543880,45601730,35209400,35209510,1571597,1571595,1571596,1571590,35209510,35209500,1571594,45571640,44831070,35209330,45601730,35225410,44829630,45601740,35209420,37200900,37200900,37200900,1569615,45533600,1569616,45601170,45533600,45601180,45596330,45567310,45581900,1569613,45596330,1569614,45548160,45576990,45581900,45576990,45596330,45562490,1569611,45557650,1569612,45591590,45543320,45586720,45533600,45601170,45538530,1569610,1569617,45562490,1569618,45543320,45557650,45576990,45601180,45567310,45572210,35209260,1571495,1571502,45577520,45606490,1571567,45548680,45534140,45601750,35209380,45596880,35209300,45548670,45596870,45567870,45606530,45606530,44824180,37200930,45572720,1571554,45606500,44819620,44824180,44825370,44819620,44822960,44834960,1571546,45548670,45534130,45539060,44830000,35208700,45566920,45557270,45595970,45595970,45547780,45547780,45591220,45562120,35209380,1571561,35209360,35209300,35209350,35209340,35209340,35209330,35209290,44834650,35209350,1571532,44820970,1571489,45601750,1568683,1568687,45571930,45576710,45547850,45581640,1568685,45543020,45562220,45562220,45533290,1568686,45552650,45533290,45581640,45596060,44835860,44828900,44832310,44823050,44823050,44833470,44823050,44827720,35209310,1571483,35206730,45606500,35206730,35208430,35208830,35209490,35209480,1571577,35209440,35209330,35209450,35209460,45538160,45552560,45571850,45605580,45547780,45542930,45581530,45538160,1571543,35209340,1571576,45577540,35209430,45572730,1571565,35209400,35209390,35209400,35209390,35209400,35209400,35209390,35209400,44827890,45548650,45533610,45543320,45548670,45534130,45543880,45582410,37200890,37200890,37200890,45553450,45582410,45539050,45553450,35209440,44834650,45557090,44826480,35209470,35209470,35209480,1571584,35209470,44819620,45577530,44827720,44819620,35209360,1569967,44821120,1569974,1569969,1569971,1569972,1569973,45548250,45562580,45548250,45577090,45572330,45533690,45567400,45577090,45533690,45557750,45548250,45591690,45548250,45606040,45582000,1569968,45553040,45548250,45567410,45543430,45577090,45567400,45586830,45538620,1569970,35209370,35209370,1571582,45606520,45543900,45592160,45539070,1571566,35209410,35209420,35209410,1571589,35209500,35209500,35209500,35209500,35209500,35209380,35209380,35209380,35209370,1571547,45587250,45587250,45596880,1571548,45534140,45543880,45567850,35209360,1571569,35209410,35209410,35209300,44824180,1568677,1568679,45576710,45571930,45586430,45576710,1568682,45596060,45543010,45562220,45557390,1568680,45605660,45543010,45586430,45538250,1568681,45552650,45567020,45552650,45576710,44824180,44819610,44819610,44832310,44828900,44832310,44820790,44833470,44837030,37200900,35209420,37200890,37200900,37200610,37200610,45592140,44820790,35209360,35208270,44833580,35208820,44832310,35209250,44826580,45558150,44834650,45571940,45581640,45557390,45576710,45552650,44825280,44827640,35225410,44821550,35225410,44823830,35209460,35209420,35209440,35209420,44819530,44822960,35206740,44833390,35206730,45567880,45563040,44825360,35206770,44825360,44831160,35206730,44820700,44836940,44824100,35206730,1571476,35209240,35209240,35209240,35209240,35209240,35209240,35209240,35209240,35209240,35209240,44832210,35206730,37200940,37200930,1571524,35209340,35209250,35209250,37200880,35209250,45548660,35209500,35209450,35209360,45558150,35209430,35209460,44833480,45548680,44821880,44825370,44834580,35206770,44819620,35209450,45567870,45553460,35209400,45592130,37200610,45582420,35209340,35209340,35209500,45601760,45592170,35209370,35209330,1571559,35209370,1571519,35209350,35209360,1571537,35209350,35209350,35209350,35209350,1569626,45538530,1569627,45596330,45596330,45552930,45586720,45605940,45572210,1571497,45543860,45543860,45556880,1571591,45534150,1571598,45548680,35209430,45577530,45558150,35209430,44834660,44834660,1571500,45548660,45539040,35209480,35209300,35209230,35209230,35209230,35209230,35209230,35209230,35209230,35209230,35209230,1571475,35209230,44837330,44821550,35225400,1569628,45557660,1569629,45552930,45538530,45567310,45586720,45586720,45605940,44837170,37200890,44819620,35209440,35209340,35209450,35209460,44821550,35225410,44828540,35225410,44831460,37200610,1571539,45548670,1571528,45567850,45577550,45577550,35209430,1571549,45543890,45582410,45582420,37200890,35209360,45606490,920170,1571588,37200610,37200620,35209440,35209450,35209460,44821880,35209480,45567840,35209440,35209450,35209460,44821120,45587260,45600620,45601730,44823190,44826730,44834830,44824340,44827890,44836030,44819810,44831330,44829060,44833660,44825540,44823190,35209290,35209260,35209260,35209260,45548660,1571473,44820970,44829060,35209210,35209210,35209210,35209210,35209210,35209210,35209210,44819810,44831320,44833660,44836030,35209210,35209210,44820970,44820970,35209210,44829060,1571503,35209310,45534140,45592130,45563020,45553440,44824100,44834570,1568449,35208270,35209450,35209420,35209440,35209460,35209470,1571570,1571526,35209250,35209310,1571478,35209260,35209440,35209470,1571530,45577530,1571531,45534130,45582410,45596870,45558160,45558160,45567860,45592140,1571527,45567850,45558160,44836650,44825010,1571585,35206740,35209270,37200610,1571538,1571522,44828900,1571479,1569634,1571571,45592150,1595628,35206730,1571550,45572720,45587250,45587250,1568689,1568690,45571940,45552650,45567020,45552650,1571498,45543860,45553440,35209250,45558180,45577550,35209510,1571501,45539040,45558150,45577550,44821880,44833480,35209380,1571504,1571552,44823050,44828910,44831160,35209300,1571493,1571533,45563020,1571513,1571515,45601720,1571490,37200880,45582410,35209400,45534150,1571568,45543890,35209410,35209410,1571560,35209410,35208820,35206730,44831070,44821800,1567851,35209340,45563010,1571562,45539050,35209330,45543880,1571534,1571600,45548690,44828910,35209290,44821880,45601740,45592140,45596880,1571542,1595627,37200620,35209300,44835770,35206740,1571578,35209420,45563020,1571575,1571579,1571580,35206770,44825280,35209260,37200900,37200900,45534140,37200910,35208830,45562530,1569760,45548690,45572710,45587250,1567864,45542710,44819530,1571484,1570031,1570038,1570033,1570035,1570036,1570037,45586840,45601280,45582020,45601280,45553050,45533700,45596440,45553050,45548270,45601280,45586840,45606050,45543440,45562590,45572340,1570032,45548270,45533700,45601280,45533700,45548260,45557760,45553050,45553050,1570034,44836170,44826570,44820700,45576410,44825280,44836940,1571553,45553450,35209480,1571587,45596890,44825660,1571505,45606490,35209360,45567860,45558150,1571494,35209350,1571536,45596870,1571523,45592140,37200890,35209320,35209330,44827890,44837190,37200930,35209380,35206770,44819530,44828820,35206730,37200930,1571563,45601750,44837330,44832630,35209480,35209490,45581900,35208270,35209450,35209440,35209460,45553460,1571581,44833100,44837810,35209270,1571516,45592140,1571517,44820700,1576285,45552140,1569630,44830160,45572210,1569631,45538540,45596330,45533610,45586720,45552940,45601180,1595626,35209320,1595621,1595624,1595625,1595629,1595630,35209310,45592160,45539040,45534130,35209480,45601720,1571586,45587250,44827350,45590780,45571990,45547900,45576760,45567070,45576760,45591630,45596870,35206740,44831150,44834970,45582420,44834950,1569759,35208430,35208430,35208430,35208430,35208430,45553460,44837030,44836650,45567850,44833480,44831160,44837330,44834970,35208830,44831520,1570617,44831470,45548400,45557870,45591820,45596560,35209420,35209420,1571574,35209430,35209430,35209430,35209430,35209480,1553812,1568688,45533290,45605660,45571940,45600900,44837040,45543870,45543870,45558150,1571511,45577520,1571512,45572710,1595623,45577520,35209490,35209490,35209510,35209510,45587260,45596890,1571541,37200930,37200940,37200940,37200940,45606530,1571601,45534150,45563030,35209510,37200940,37200940,1571592,45567870,1571593,45543910,1595639,45592160,44836950,45586120,45567840,45539050,45534130,1571508,1571510,1571509,45582400,1595622,45548660,37200880,45596860,35209490,37200930,1571535,45582410,45601740,45606500,45592140,35209470,44823050,35209490,44824180,35209470,44826480,44824100,37200920,35209420,37200920,37200920,35209510,37200880,35209330,45577530,45587240,44837170,45534140,44819620,1567863,44834580,45582400,45534130,35209260,44820700,35206770,1571470,35209180,35209180,35209180,35209180,35209180,35209180,35209180,35209180,35209180,35209180,44833480,35209410,1571471,35209190,35209190,35209190,35209190,35209190,35209190,35209190,35209190,35209190,35209190,44835860,35209500,35209300,44834810,44820950,44827870,44825520,44822030,35209270,44829060,44824340,35209290,44829060,45558140,35209270,35209270,45567880,45606500,45582420,45558160,44831490,44825680,1570022,1570017,1570019,1570020,1570021,45606050,45591700,45572340,45533700,45591700,45577100,45601280,45567420,45553040,45601280,45591700,45548260,45606050,45596440,45577100,1570016,45601280,45591700,45572340,45567420,45606050,45553040,45548260,45557760,1570018,1570015,1569966,1570030,1570025,1570027,1570028,1570029,45591700,45572340,45596440,45538630,45548260,45543440,45582010,45553050,45596440,45548260,45606050,45572340,45548260,45596440,45606050,1570024,45596440,45562590,45582020,45567420,45533700,45567420,45543430,45553040,1570026,35208750,1570023,1569991,1569998,1569993,1569995,1569996,1569997,45586840,45553040,45562590,45557760,45562590,45567410,45572330,45577100,45572330,45553040,45582010,45538630,45572330,45562590,45562590,1569992,45557760,45533690,45601280,45548260,45567410,45557760,45586840,45582010,1569994,44826870,1569975,1569982,1569977,1569979,1569980,1569981,45582010,45582000,45577090,45548250,45553040,45591690,45582010,45557750,45601270,45562580,45591690,45548250,45577100,45586830,45543430,1569976,45606040,45543430,45577090,45538620,45567410,45582000,45591690,45567410,1569978,1569999,1570006,1570001,1570003,1570004,1570005,45538630,45606040,45596430,45572330,45533690,45596430,45582010,45577100,45557760,45562590,45533690,45543430,45567410,45596430,45567410,1570000,45572330,45557760,45606050,45548260,45591690,45596430,45572330,45577100,1570002,1570007,1570014,1570009,1570011,1570012,1570013,45582010,45533700,45538630,45582010,45582010,45606050,45591690,45567420,45538630,45567410,45591690,45591700,45548260,45538630,45548260,1570008,45553040,45596430,45543430,45582010,45562590,45596430,45567410,45538630,1570010,1569983,1569990,1569985,1569987,1569988,1569989,45538630,45586840,45606040,45533690,45567410,45553040,45562580,45596430,45591690,45596430,45596430,45577100,45572330,45601280,45543430,1569984,45538630,45591690,45538620,45596430,45591690,45606040,45572330,45606040,1569986,37200880,44832310,1571555,1571558,45543890,45567860,45600620,45571650,45537940,45542720,45557100,1567888,44822860,35206830,35206840,35206830,45557100,1567889,35206840,35206840,45571650,37200890,35209470,35209490,44833660,45577520,44821880,44832310,35209470,35206770,44831070,44834650,44824180,44820700,44831070,44819530,44835770,44824100,44829910,44828820,44836650,35225410,35209300,1571492,44830170,35209290,35209300,44825540,44827720,1571545,45592150,45601740,45563020,1571525,45582400,45548670,45567850,45600380,37200940,37200930,35209330,35209450,35209440,35209380,35209390,35208700,35209430,37200930,35209490,44819940,37200880,37200890,44831060,44822960,44834570,35206770,44825280,45596870,35209450,45592140,45587240,45553460,37200920,37200920,37200920,45553460,37200920,45577540,1571573,37200920,37200920,45539050,45601730,35208270,35209260,1576284,35225410,1571499,45572700,45606490,35209250,35209390,35209390,35209390,44820950,44831310,1569620,45548160,1569621,45576990,45562490,45548160,45538530,45596330,45543320,44819800,1569622,45533600,1569623,45576990,45552930,45567310,45576990,45601180,45552930,44822030,1569624,45538530,1569625,45591590,45552930,45543320,45557660,45562490,45596330,1569619,44829050,44833650,1569632,45572210,1569633,45567310,45586720,45562490,45567310,45533610,45586720,35209340,44819820,35209300,44830160,1595635,1571551,45606500,45577540,45548680,1595633,1568691,45591310,45596060,45571940,45605660,35209490,1571491,44830010,44819620,44833660,1568684,45567020,45591310,45557390,45538250,37200930,37200880,1568678,45605660,45586430,45586430,45576710,44824100,45572700,37200920,44832630,44823050,35209280,1326722,1326724,1326723,35209360,1326725,1326727,1326726,1326716,1326721,1326720,1553811,1326717,1326719,1326718,1326710,1326715,1326714,1553810,1326711,1326713,1326712,1326709,45539060,1595634,35209500,1571474,35209220,35209220,35209220,35209220,35209220,35209220,35209220,35209220,35209220,35209220,44836650,37200900,37200900,45601750,37200900,35209370,35209290,1595638,1595632,1595636,1595637,45601720,35209310,35209320,35209320,35209320,35209320,45543870,35209320,1571514,1571507,45548660,35209320,1595631,35209320,1571506,35209400,45563010,35209280,35209320,35209400,35209410,35209480,35209390,44832310,35209350,1571540,35209310,35209310,1571480,45548650,45572700,1571482,45558140,45553440,45563010,1571481,45582390,45539030,45553430,35209410,44824180,35209460,45539080,45577550,45601760,1571564,45562120,45600820,45566920,45576620,45595980,45600820,45547780,45581530)

) I
) C
;

with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 8)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 8)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Demographic Criteria
SELECT 0 as index_id, e.person_id, e.event_id
FROM #qualified_events E
JOIN @cdm_database_schema.PERSON P ON P.PERSON_ID = E.PERSON_ID
WHERE YEAR(E.start_date) - P.year_of_birth > 17
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 1)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000200,38000200,38000200,38000200,38000200,38000200,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000220,38000220,38000220,38000220)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 2)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000200,38000200,38000200,38000200,38000200,38000200,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000220,38000220,38000220,38000220)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.visit_occurrence_id, C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cns on (o.observation_source_concept_id = cns.concept_id and cns.codeset_id = 2)
) C

WHERE (C.observation_date >= DATEFROMPARTS(2005, 1, 1) and C.observation_date <= DATEFROMPARTS(2017, 12, 31))
AND C.observation_type_concept_id  in (38000200,38000200,38000200,38000200,38000200,38000200,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000220,38000220,38000220,38000220)
-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 3
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 3)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000200,38000200,38000200,38000200,38000200,38000200,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000220,38000220,38000220,38000220)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 5)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000200,38000200,38000200,38000200,38000200,38000200,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id , A.start_date
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 5)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000220,38000220,38000220,38000220)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(DISTINCT cc.start_date) >= 2
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 2 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 5)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000220,38000220,38000220,38000220)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 6)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 13)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000200,38000200,38000200,38000200,38000200,38000200,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000210,38000220,38000220,38000220,38000220)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 6 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_6
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 0)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 7 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_7
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cns on (de.drug_source_concept_id = cns.concept_id and cns.codeset_id = 9)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Device Exposure Criteria
select C.person_id, C.device_exposure_id as event_id, C.device_exposure_start_date as start_date, COALESCE(C.device_exposure_end_date, DATEADD(day,1,C.device_exposure_start_date)) as end_date,
        C.visit_occurrence_id, C.device_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DEVICE_EXPOSURE de
JOIN #Codesets cns on (de.device_source_concept_id = cns.concept_id and cns.codeset_id = 9)
) C

WHERE (C.device_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.device_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Device Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 8 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_8
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 10)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_6
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_7
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_8) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;

TRUNCATE TABLE #Inclusion_6;
DROP TABLE #Inclusion_6;

TRUNCATE TABLE #Inclusion_7;
DROP TABLE #Inclusion_7;

TRUNCATE TABLE #Inclusion_8;
DROP TABLE #Inclusion_8;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{9 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),9)-1)
}
)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;

-- custom era strategy

with ctePersons(person_id) as (
	select distinct person_id from #included_events
)

select person_id, drug_exposure_start_date, drug_exposure_end_date
INTO #drugTarget
FROM (
	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE, COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 8 AND de.drug_concept_id = cs.concept_id

	UNION ALL

	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE, COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 8 AND de.drug_source_concept_id = cs.concept_id
) E
;

select et.event_id, et.person_id, ERAS.era_end_date as end_date
INTO #strategy_ends
from #included_events et
JOIN 
(
  select ENDS.person_id, min(drug_exposure_start_date) as era_start_date, DATEADD(day,1, ENDS.era_end_date) as era_end_date
  from
  (
    select de.person_id, de.drug_exposure_start_date, MIN(e.END_DATE) as era_end_date
    FROM #drugTarget DE
    JOIN 
    (
      --cteEndDates
      select PERSON_ID, DATEADD(day,-1 * 63,EVENT_DATE) as END_DATE -- unpad the end date by 63
      FROM
      (
				select PERSON_ID, EVENT_DATE, EVENT_TYPE, 
				MAX(START_ORDINAL) OVER (PARTITION BY PERSON_ID ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal,
				ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY EVENT_DATE, EVENT_TYPE) AS OVERALL_ORD -- this re-numbers the inner UNION so all rows are numbered ordered by the event date
				from
				(
					-- select the start dates, assigning a row number to each
					Select PERSON_ID, DRUG_EXPOSURE_START_DATE AS EVENT_DATE, 0 as EVENT_TYPE, ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY DRUG_EXPOSURE_START_DATE) as START_ORDINAL
					from #drugTarget D

					UNION ALL

					-- add the end dates with NULL as the row number, padding the end dates by 63 to allow a grace period for overlapping ranges.
					select PERSON_ID, DATEADD(day,63,DRUG_EXPOSURE_END_DATE), 1 as EVENT_TYPE, NULL
					FROM #drugTarget D
				) RAWDATA
      ) E
      WHERE 2 * E.START_ORDINAL - E.OVERALL_ORD = 0
    ) E on DE.PERSON_ID = E.PERSON_ID and E.END_DATE >= DE.DRUG_EXPOSURE_START_DATE
    GROUP BY de.person_id, de.drug_exposure_start_date
  ) ENDS
  GROUP BY ENDS.person_id, ENDS.era_end_date
) ERAS on ERAS.person_id = et.person_id 
WHERE et.start_date between ERAS.era_start_date and ERAS.era_end_date;

TRUNCATE TABLE #drugTarget;
DROP TABLE #drugTarget;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
UNION ALL
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

UNION ALL
-- Censor Events
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Drug Exposure Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id

UNION ALL
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  
) C

WHERE C.condition_type_concept_id  in (38000200)
-- End Condition Occurrence Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id


),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, CASE WHEN start_date > DATEFROMPARTS(2005, 1, 1) THEN start_date ELSE DATEFROMPARTS(2005, 1, 1) END, CASE WHEN end_date < DATEFROMPARTS(2017, 12, 31) THEN end_date ELSE DATEFROMPARTS(2017, 12, 31) END 
FROM #final_cohort CO
WHERE CASE WHEN start_date > DATEFROMPARTS(2005, 1, 1) THEN start_date ELSE DATEFROMPARTS(2005, 1, 1) END <= CASE WHEN end_date < DATEFROMPARTS(2017, 12, 31) THEN end_date ELSE DATEFROMPARTS(2017, 12, 31) END
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;
-- calculate censored
insert into @results_database_schema.cohort_censor_stats (cohort_definition_id, lost_count)
	select @target_cohort_id as cohort_definition_id, coalesce(FCC.total_people - TC.total, 0) as lost_count
	FROM
		(select count_big(distinct person_id) as total_people from #final_cohort) FCC,
		(select count_big(distinct subject_id) as total from @target_database_schema.@target_cohort_table t where t.cohort_definition_id = @target_cohort_id) TC;
-- END: Censored Stats
}
{1 != 0 & 9 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence UNION ALL SELECT CAST(6 as int) as rule_sequence UNION ALL SELECT CAST(7 as int) as rule_sequence UNION ALL SELECT CAST(8 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
