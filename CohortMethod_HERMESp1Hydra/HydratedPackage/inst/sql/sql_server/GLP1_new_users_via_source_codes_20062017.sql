CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (44820682,44821787,44832190,44832191,44824071,44822934,44831046,44819501,44822936,44820684,44832192,44820683,44836918,44833368,44825264,44819502,44822935,44834549,44829881,44819504,1567940,1567950,45561948,1567952,45533017,45552382,45547621,45600639,37200193,37200196,37200195,37200194,37200197,45576439,45552379,45576440,45600638,45542737,45547622,45595795,45605398,45533018,1567955,45552383,35206877,45600640,1567941,45557110,45600636,1567942,1567945,45595793,37200143,37200142,37200141,37200144,45591026,37200147,37200146,37200145,37200148,1567946,45561947,37200151,37200150,37200149,37200152,45605397,37200155,37200154,37200153,37200156,1567949,1567943,1567954,45581349,45537960,45600637,45586138,45576438,45547623,45566729,45581350,45547624,1567951,35206879,45557111,1567948,37200179,37200182,37200181,37200180,37200183,45576437,37200167,37200166,37200165,37200168,45571654,37200191,37200190,37200189,37200192,37200169,37200172,37200171,37200170,37200173,37200174,37200177,37200176,37200175,37200178,1567947,45595794,37200159,37200158,37200157,37200160,45537958,37200163,37200162,37200161,37200164,1567953,37200184,37200187,37200186,37200185,37200188,35206878,1567944,45552381,45542736)

) I
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (44831389,44823246,44823247,44822104,44831390,44829117,1571690,1571692,37200978,45539106,45563059,45582460,1571691,37200977,45553483,45582459,45558215,37200979,1571693,45572770,45582461,45592198,44829590,45600362)

) I
) C UNION ALL 
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (44836914,44836915,44836916,44824073,44829878,44824072,44828795,44833366,44819500,44829879,44826460,44832193,44831047,44826461,44827616,44833367,44831045,44832194,44827617,44829882,1567956,1567966,45533020,1567968,45537962,45595798,45595797,45547626,37200250,37200253,37200252,37200251,37200254,45547625,45591027,45600641,45605403,45533022,45533021,45557113,45581355,45605405,1567957,45586139,45542738,1567971,45561949,35206880,45591031,1326491,1326493,1326492,1567958,1567961,45552385,37200200,37200199,37200198,37200201,45581354,37200204,37200203,37200202,37200205,1567962,45537961,37200208,37200207,37200206,37200209,45591029,37200212,37200211,37200210,37200213,1567965,1567959,1567970,45576443,45586140,45605401,45605404,45533019,45566731,45547627,45600642,45595799,1567967,35206882,45533023,1567964,37200236,37200239,37200238,37200237,37200240,45591030,37200224,37200223,37200222,37200225,45552386,37200248,37200247,37200246,37200249,37200226,37200229,37200228,37200227,37200230,37200231,37200234,37200233,37200232,37200235,1567963,45557112,37200216,37200215,37200214,37200217,45605402,37200220,37200219,37200218,37200221,1567969,37200241,37200244,37200243,37200242,37200245,35206881,1567960,45581352,45581353)

) I
) C UNION ALL 
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45774435,44816332,40170911,1583722,793143,44506754)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45774435,44816332,40170911,1583722,793143,44506754)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (36410293,36410289,1718706,1718711,1718604,1718712,1718713,1718705,1718709,21174087,1718605,1718606,44191345,36055923,36055919)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (36410293,36410289,1718706,1718711,1718604,1718712,1718713,1718705,1718709,21174087,1718605,1718606,44191345,36055923,36055919)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (44826679,44821988,44823144,44832424,1569492,44827823,45562459,45572172,44826680,45562458,44834770,44820887,35208013,35208020,44829013,44820888,44829012,44831280,44837136,44820889,35208025,35208024,35208023,44826681,44833611,45586675,1569486,44829011,44827822,35208022,45586674,44826678,44832423,44824287,44831278,44824288,44831279,44824289,44837135,44834769,45572168,45548116,45572169,45572170,45581859,45576951,45548117,45576952,35208016,45591558,45601133,45543269,45557626,35208015,44837134,44829010,44825474,44821986,44832422,1569489,45572171,1569491,44835980,1569487,44826677,35208021,44830115,35208019,45591559,45567265,45567266,45581860,1569485,35208014,44832421,35208018,1569490,45562457,45601134,45543270,44830114,35208017)

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (1105775,1140088,19049816,1237049,1154161,1111706,1147878,1115572,939259,902938,1196514,1149380,905233,1111220,1196677,40240664,45775116,1137529,43532539,1154343,1236744,1138050,1192218,1123995,1125449,1112921,42873639,1106776,1110942,1152631,1114620,19027186,1551099,1506270,1550557,1518254,1507705,975125,40236897)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (1105775,1140088,19049816,1237049,1154161,1111706,1147878,1115572,939259,902938,1196514,1149380,905233,1111220,1196677,40240664,45775116,1137529,43532539,1154343,1236744,1138050,1192218,1123995,1125449,1112921,42873639,1106776,1110942,1152631,1114620,19027186,1551099,1506270,1550557,1518254,1507705,975125,40236897)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (40166035,40239216,43013884,1580747)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (40166035,40239216,43013884,1580747)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (36175773,36175774,36477242,36478590,36480217,36480545,36496799,36497064,42822513,42822516,42824498,42845677,44409166,44412078,44416018,44416028,44417564,44422638,44423040,44429831,44432564,44434914,44440705,44441901,44443486,44450088,44450089,44451495,44451648,44460851,44462192,44462342,44463172,44463291,44464016,44464162,44465209,44465614,44465679,44466091,44466575,44466623,44466625,44837921,44839101,44839103,44843363,44843364,44843383,44843397,44843414,44843415,44843418,44843422,44843423,44843424,44843425,44843426,44843475,44843477,44843478,44843486,44843487,44845982,44846189,44849227,44849452,44850500,44850620,44853786,44854928,44855081,44855082,44855122,44855123,44855124,44856268,44860563,44860589,44860611,44860612,44860664,44860665,44860666,44860679,44860680,44860681,44860682,44860683,44860684,44860685,44860687,44860688,44860693,44861253,44863167,44863170,44863171,44865394,44866364,44866378,44866717,44867554,44867593,44867674,44871871,44871872,44871873,44871929,44871949,44871950,44871984,44872617,44872618,44877631,44877645,44877662,44877663,44877679,44877681,44877683,44877684,44877687,44877758,44877759,44877760,44877761,44877762,44877763,44877764,44877765,44877770,44880214,44880223,44889135,44889145,44889146,44889214,44889217,44889257,44889259,44889260,44892259,44894728,44894741,44894748,44894756,44894773,44894776,44894777,44894829,44894848,44894849,44894850,44894853,44894859,44895472,44897439,44897440,44897441,44897647,44901011,44901987,44902017,44905854,44905921,44906347,44906396,44906441,44906488,44906489,44906490,44906513,44907734,44907736,44907737,44911949,44911950,44911951,44911965,44911984,44911987,44911988,44911989,44911992,44912038,44912057,44912058,44912059,44914496,44914497,44914498,44914499,44914506,44915561,44916747,44919030,44919063,44923221,44923287,44923386,44923387,44923388,44923433,44924602,44924603,44924604,44926286,44928871,44928886,44928890,44928891,44928897,44928967,44928968,44928974,44928991,44928992,44928993,44928994,44928995,44928996,44931524,44931525,44931526,44933693,44934685,44935108,44936051,44940395,44940396,44940482,44940484,44945822,44945832,44945843,44945844,44945845,44945864,44945865,44945866,44945880,44945881,44945930,44945951,44945952,44945953,44945954,44945955,44945957,44945958,44945959,44948377,44948378,44948379,44948388,44950601,44951533,44952166,44952167,44953929,44954465,44957044,44957072,44957169,44957191,44957996,44958353,44962571,44962586,44962587,44962599,44962600,44962601,44962603,44962620,44962621,44962626,44962665,44962672,44962684,44962685,44962686,44962687,44962688,44962691,44965122,44965123,44965124,44965129,44965314,44968328,44969698,44974041,44974046,44974069,44974070,44974096,44974195,44974197,44974198,44975372,44975373,44979622,44979633,44979648,44979649,44979659,44979663,44979665,44979666,44979667,44979668,44979669,44979706,44979707,44979723,44979724,44979725,44979726,44979727,44979728,44979732,44980310,44982201,44982399,44983611,44984379,44984380,44985715,44990517,44990564,44990929,44991104,44991106,44991107,44991893,44996493,44996498,44996512,44996513,44996514,44996515,44996556,44996557,44996616,44996632,44996633,44996634,44996635,44996637,44998359,44998360,44999140,44999141,44999142,45003696,45004693,45008017,45008019,45008060,45009059,45013617,45013622,45013642,45013643,45013664,45013668,45013669,45013670,45013675,45013676,45013718,45013738,45013739,45013740,45013741,45013742,45013743,45013744,45013747,45013748,45013749,45013750,45016322,45016323,45016324,45016326,45020048,45020822,45022555,45025213,45025373,45025413,45025415,45025417,45026277,45026279,45026646,45026647,45030951,45030959,45030967,45030992,45030993,45030995,45030996,45031000,45031060,45031061,45031062,45031063,45031065,45031066,45033509,45033510,45033511,45033512,45033513,45033514,45037340,45041883,45042281,45042338,45042360,45042456,45042457,45042459,45043620,45043622,45043627,45047840,45047887,45047888,45047891,45047892,45047894,45047934,45047935,45047936,45047944,45047945,45047969,45047970,45047971,45047972,45047973,45047974,45047975,45047976,45047977,45050461,45050462,45050463,45054909,45054955,45055015,45059497,45059549,45059601,45060408,45060780,45060783,45060784,45064906,45064928,45064929,45064945,45064948,45064949,45064950,45064984,45064997,45065009,45065010,45065011,45065012,45066778,45067610,45067612,45067613,45067614,45069834,45070907,45072106,45076518,45076608,45076641,45077816,45082006,45082014,45082022,45082035,45082036,45082038,45082039,45082058,45082061,45082062,45082067,45082122,45082138,45082139,45083736,45084490,45084494,45084495,45088360,45088984,45089059,45090200,45090709,45093383,45093537,45093571,45093575,45093592,45094712,45094714,45094717,45098956,45098965,45098966,45098969,45098970,45098973,45098991,45098992,45098995,45098998,45099057,45099076,45099077,45099078,45099079,45099080,45099081,45099082,45099087,45099632,45100704,45101500,45104656,45104771,45105965,45106007,45110408,45110584,45110586,45110587,45110589,45110592,45111187,45111194,45111839,45111841,45111843,45111844,45115951,45115972,45115973,45115988,45115989,45116049,45116055,45116058,45116078,45116079,45116080,45116081,45116083,45116084,45116085,45116086,45116088,45116089,45116685,45117944,45118538,45118539,45121743,45127390,45127391,45127393,45128596,45128597,45132886,45132888,45132890,45132891,45132892,45132893,45132940,45132941,45132954,45132955,45132956,45132959,45135400,45135401,45135402,45135406,45135595,45143798,45144190,45144256,45144289,45144375,45144380,45144398,45144964,45145588,45145589,45149844,45149880,45149881,45149903,45149904,45149905,45149906,45149908,45149954,45149955,45149961,45149962,45149980,45149981,45149983,45149984,45149985,45149986,45151401,45152448,45152449,45160971,45161482,45162713,45162715,45162716,45167076,45167077,45167097,45167098,45167108,45167114,45167115,45167117,45167131,45167133,45167138,45167175,45167176,45167192,45167193,45167194,45167195,45167196,45167218,45167220,45167221,45167222,45167223,45167224,45167227,45169714,45169715,45172971,45174212,45175288,45175289,45178430,45178529,45178530,45178531,45178533,45179755,45183997,45184011,45184020,45184022,45184042,45184050,45184051,45184052,45184057,45184058,45184096,45184123,45184125,45184126,45184127,45184128,45184131,45184132,45184133,45184477,45186578,45186579,45186580,45186581,45186582,45186589,45186590,45189856,45189882,45190420,45191152,45195438,45195551,45195594,45195599,45195637,45195668,45195669,45196459,45196834,45198652,45201197,45201224,45201230,45201231,45201232,45201258,45201259,45201308,45201309,45201310,45201320,45201340,45201341,45201342,45201343,45201345,45201346,45201349,45201358,45201359,45203784,45203786,45203787,45203788,45203789,45203790,45207100,45207142,45207336,45207350,45207536,45207570,45212906,45212911,45212912,45214088,45218299,45218312,45218326,45218346,45218347,45218350,45218386,45218397,45218398,45218399,45218400,45218413,45218414,45218415,45218416,45218417,45218418,45218420,45218427,45218741,45221014,45221214,45223215,45225526,45229596,45230028,45230046,45230103,45230104,45230153,45230156,45230157,45235584,45235596,45235611,45235612,45235615,45235616,45235619,45235653,45235664,45235669,45235687,45235688,45235689,45235690,45235691,45235692,45235693,45235694,45235696,45235697,45238167,45238168,45241671,45246562,45246929,45246994,45247026,45247027,45247109,45247111,45247114,45248297,45248299,45252602,45252632,45252651,45252657,45252658,45252662,45252693,45252712,45252729,45252730,45252731,45252732,45252733,45253024,45255268,45255269,45255270,45255271,45255272,45258478,45258771,45259727,45264181,45264225,45264277,45264323,45265486,45269762,45269767,45269784,45269785,45269795,45269796,45269813,45269814,45269816,45269817,45269818,45269819,45269820,45269821,45269870,45269883,45269884,45269885,45269886,45269887,45269888,45270450,45270451,45271561,45271562,45271563,45271564,45272342,45272343,45272344,45272347,45272350,45276121,45281129,45281130,45281260,45281281,45281331,45281332,45281333,45281335,45282164,45282540,45282543,45286811,45286816,45286834,45286852,45286854,45286855,45286905,45286933,45286934,45286935,45289441,45289442,45289443,45289444,45289445,45289447,45289641,45291676,45293110,45298269,45298377,45299692,45299694,45303838,45303845,45303846,45303860,45303871,45303872,45303873,45303875,45303877,45303896,45303899,45303946,45303968,45303969,45303970,45303971,45303972,45303973,45303974,45303975,45303977,45304520,45305657,45306432,45306433,45306442,45308635,45309658,45310053,45310116,45310179,45310203,45310928,45315393,45315437,45315475,45316674,45316676,45320859,45320866,45320879,45320882,45320883,45320885,45320907,45320908,45320909,45320910,45320911,45320959,45320960,45320969,45320976,45320977,45320988,45320989,45320991,45323437,45323441,45323442,45323443,45323444,45326663,45326986,45327149,45331885,45332229,45332271,45332323,45332324,45332407,45332408,45337906,45337937,45337939,45337942,45337957,45337961,45337962,45337964,45337965,45338013,45338032,45338033,45338034,45338035,45338036,45338037,45338038,45338039,45338040,45341848,45343963,45344898,45344944,45344995,45349389,45349399,45349494,45349495,45350653,45354950,45354952,45354956,45354991,45354992,45355012,45355014,45355016,45355017,45355074,45355090,45355103,45355104,45355105,45355106,45355107,45355108,45355110,45355112,45357588,45357589,45357590,45357591,45357592,45357786,45362007,45363222,45365908,45366366,45366410,45366448,45366449,45371818,45371847,45371901,45371913,45371914,45371915,45371916,45371917,45371919,45371922,45371923,45372527,45373710,45374494,45374495,45374496,45377772,45377780,45377783,45377810,45378299,45378450,45379128,45382998,45383002,45383504,45383569,45860264,45868617,45870751,45871587,45871602,45873702,46249585,46250048,46253039,46253321,46254613,46255370,46255955,46365278,45298467,36493739,44873248,43051324,45244695,36197671,45872086,45310325,45293212,36194950,36191609,45178000,36108957,45264352,44460933,36094957,44433489,44988727,45863187,44467347,36197669,46252362,45227668,45057020,44413262,36493737,45861475,772877,45310326,43051147,45232646,36497572,44991105,44966720,42508699,45317991,44963455,36194947,44441841,36988406,45867312,45804433,44889288,44855920,35530783,45227669,36089887,45350291,45875882,42508702,35529321,45195636,42655375,44980486,45128599,35520137,45141875,45144379,45196836,35523711,42867294,45867733,45304722,1393750,45231333,44441900,46253741,42508305,45104234,36492982,36092256,1788974,44857634,42822514,37618203,37296974,36108956,35504818,35107416,45849638,42655385,44975008,44416424,37407402,36197670,44467712,36918582,45008202,45232647,45027208,44924605,44907738,44476112,44476111,42663273,44476108,737522,42868291,35107412,45161518,42508308,45014539,44855150,42835162,1221357,44890469,44476938,45350655,45355854,44476110,44838743,45747161,45264325,36175771,42868294,45873703,44907371,44957146,36664461,35110462,45076663,45129941,44883945,35110461,45282541,36109516,45167898,45091079,36493997,35110457,45321761,35524544,45282542,43051148,45025416,43051149,35110455,46250065,45026278,37618262,35110456,35107415,35504978,45366473,36493017,42835183,45248298,45091078,44476109,36665987,36493975,44946670,35520854,45179757,36477976,44901013,45123139,1393520,44439171,42868020,45264326,45230849,42833607,46366003,45205412,42868018,45161540,45195638,1566874,35520797,44856272,36109515,45315472,45196840,45867327,37618204,42845675,45094715,1372087,45264327,45026648,44906515,43051150,45366450,44852641,36175772,44886885,45196838,45299311,44440559,45076638,36478943,44872870,45184892,44467221,45746782,44925904,45020036,1723408,35110458,45832208,44461821,36177803,42508031,44856269,44412295,45212905,45832206,42508697,36194948,45333595,45849644,45292652,37315014,46245014,45333597,42833652,44869684,44974199,42508700,44856271,42845676,44467348,36699084,45231334,44872869,45086847,37292311,45094716,37292312,35505009,45327082,44904017,35110460,35107413,737828,45832207,42653828,45111845,771773,42867295,45849604,45110590,45076637,42508306,45214092,1566137,45093572,45867311,37618263,36095158,35110459,1724025,1566875,45164182,44467145,43051326,45901316,45746708,45264321,45247112,45247108,42508701,42508304,37298950,1724026,750228,44889258,45002939,43051325,45355853,45079130,45062052,45746709,42822515,45314917,45093573,37618205,36492983,36109514,36988403,45316678,44866916,45248301,45167955,45349496,45299693,45874396,42508698,37618202,45849636,45332433,44874680,35524545,1185277,44968731,36918058,45214091,45002889,44840388,35107411,44476107,44839100,35107414,45060787,44872075,36194949,44431051,44957170,45281334,37315013,45093595,1723313,37618261,45071288,45266023,36109517,46365153,45190185,45110591,771775,46251885,45150835,45162335,42822606,972215,45127392,45215442,44441894,45017953,44476937,771774,36698425,45224570,42835142,45146959,45001573,45108121,44983777,44952913,45904001,44464597,37618264,44448577,42508307,45164132,44781070,45898005,45128598,36493016,45804434,46254520,45213736,45249627,583566,45128601,45095315,45125011,45009058,44467149,45325054,45241833,44467146,44974196,44907742,44895670,45352022,44991381,45804432,36493859,45253479,44921006,37618206,45028008,37315015,46244996,45196837,36497573,776566,45181054,44476113,44873246,1219119,45349473,36493738,36480253,36197668,45060782,45335021,45247113,42868019,45865874,45747160,44428336,35504695,973358,44476106,44891076,45120925,45868352,44444697,44986892,45077819,45224618,45074158,44448733,772322,36096950,46250047,1723407,45000811,45178532,1162611,45213737,45849637,44461047,44416029,1162126,772862,45125012,44886884,45010805,44855292,1724027,45025411,45298465,1788521,35504820,44872054,45196835,45294210,45093574,35525059,46366004,45111847,42867296,45378298,44840389,1372062,45096074,36189268,45110588,44900972,35531133,44413205,44439170,45137793)

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (1529331,1530014,44816332,43013884,43526465,44785829,45774435,45774751,793293,1583722,1597756,1560171,1559684,40239216,40170911,44506754,1503297,1510202,1502826,1525215,1517998,1516766,1547504,40166035,793143,1580747,1502809,1502855,1515249,19122137,19122121,1550023,1502905,1516976,35602717,35605670,42899447,46221581,1544838,1513849,1586369,1562586,1567198,1596977,1586346,19013951,35198096,1590165,1513876,1513843,1588986,1531601,19091621,19090187,19090180,19090249,19090229,19013926,19090204,19090226,19090244,19090247,19090221,35884381)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (1529331,1530014,44816332,43013884,43526465,44785829,45774435,45774751,793293,1583722,1597756,1560171,1559684,40239216,40170911,44506754,1503297,1510202,1502826,1525215,1517998,1516766,1547504,40166035,793143,1580747,1502809,1502855,1515249,19122137,19122121,1550023,1502905,1516976,35602717,35605670,42899447,46221581,1544838,1513849,1586369,1562586,1567198,1596977,1586346,19013951,35198096,1590165,1513876,1513843,1588986,1531601,19091621,19090187,19090180,19090249,19090229,19013926,19090204,19090226,19090244,19090247,19090221,35884381)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (35209481,35209380,45582407,45587243,35209328,37200893,35209387,1571583,45539077,1571599,45592167,45567866,37200911,37200910,37200907,37200913,45606509,45587259,1571572,37200914,37200908,37200909,37200906,37200912,45582409,1567852,44825278,35206739,44833393,45587247,44828906,44826575,1571496,45592126,45572703,44834829,44830171,44829058,44831323,44825537,44824339,44820965,35209365,1571485,44833658,35209273,44826731,35209270,44837189,44837190,44833659,35209271,44820969,35209269,1571469,35209171,35209172,35209169,35209167,35209168,35209170,35209166,35209165,35209173,35209174,45558166,35209369,45600895,45605658,45543016,45576712,45547848,1571520,45601729,45567843,35209246,45577539,1571556,45582418,35209383,35209385,45606495,44828909,44837037,44830007,45601734,35208272,45538158,45557269,45538159,45586334,45571846,45562119,45595972,45566914,44824100,35206767,44828817,35209468,35209259,45601741,44827637,44819614,44823051,35207874,44832400,35209491,35209360,45553439,35209350,35209462,37200881,44833391,45606494,45558157,1571529,45543875,45601733,45587244,45563019,45534132,35209341,45543876,35209264,45587245,45572715,45563027,1571544,1571518,45601728,45539047,44829909,44830175,35209311,35209310,35209306,44820426,45566479,44821548,35225410,35208431,35209285,35209286,35209281,1571487,35209283,1571488,35209288,35209332,35209282,35209289,45572717,44833474,44830005,35207507,44827702,44827720,45601751,37200925,1568676,44825361,44832310,44837033,44821874,44821876,44820792,44824178,44828905,44837035,44820793,44824177,44831156,44825538,44837187,44837186,44825539,44831325,44831326,44831327,44824340,44837188,35209366,44833476,44826576,44828907,1571486,44830172,35209274,35209275,35209276,35209277,35209278,44837191,44827888,44830173,44820970,44837192,44836035,35209279,1571472,35209201,35209202,35209199,35209197,35209198,35209200,35209196,35209195,35209203,35209204,35209248,45548678,35209370,44826867,1571521,45567844,45601730,45582419,1571557,45543887,1571477,35209250,44825363,44833473,37200877,37200613,45543882,45601725,35209403,35209507,1571597,1571595,1571596,1571590,35209505,35209504,1571594,45571640,44831070,35209333,45601727,35225411,44829631,45601739,35209417,37200899,37200897,37200898,1569615,45533601,1569616,45601174,45533600,45601175,45596327,45567306,45581902,1569613,45596326,1569614,45548159,45576987,45581901,45576986,45596325,45562489,1569611,45557653,1569612,45591593,45543315,45586716,45533598,45601172,45538530,1569610,1569617,45562491,1569618,45543316,45557654,45576988,45601176,45567307,45572211,35209255,1571495,1571502,45577517,45606489,1571567,45548681,45534141,45601750,35209379,45596876,35209298,45548667,45596867,45567874,45606525,45606526,44824183,37200930,45572716,1571554,45606502,44819617,44824182,44825365,44819618,44822957,44834963,1571546,45548674,45534134,45539057,44830004,35208699,45566915,45557270,45595974,45595973,45547777,45547776,45591216,45562120,35209382,1571561,35209364,35209299,35209353,35209344,35209335,35209327,35209293,44834653,35209354,1571532,44820971,1571489,45601745,1568683,1568687,45571934,45576711,45547847,45581636,1568685,45543015,45562218,45562217,45533287,1568686,45552650,45533288,45581635,45596058,44835860,44828903,44832309,44823046,44823045,44833472,44823047,44827719,35209309,1571483,35206731,45606499,35206733,35208433,35208825,35209488,35209483,1571577,35209441,35209334,35209451,35209460,45538160,45552556,45571847,45605579,45547778,45542926,45581528,45538161,1571543,35209336,1571576,45577542,35209429,45572730,1571565,35209398,35209394,35209397,35209393,35209395,35209396,35209392,35209400,44827889,45548653,45533607,45543320,45548670,45534131,45543881,45582411,37200890,37200891,37200889,45553446,45582412,45539054,45553447,35209438,44834654,45557091,44826484,35209473,35209472,35209476,1571584,35209474,44819615,45577529,44827721,44819620,35209359,1569967,44821123,1569974,1569969,1569971,1569972,1569973,45548252,45562581,45548250,45577090,45572326,45533689,45567404,45577092,45533690,45557752,45548249,45591685,45548251,45606039,45582002,1569968,45553036,45548248,45567405,45543428,45577091,45567403,45586833,45538622,1569970,35209372,35209373,1571582,45606517,45543902,45592156,45539072,1571566,35209407,35209415,35209413,1571589,35209497,35209500,35209498,35209499,35209501,35209377,35209378,35209375,35209374,1571547,45587251,45587250,45596878,1571548,45534135,45543883,45567852,35209358,1571569,35209411,35209410,35209303,44824184,1568677,1568679,45576707,45571933,45586431,45576708,1568682,45596057,45543014,45562216,45557386,1568680,45605657,45543013,45586432,45538249,1568681,45552649,45567022,45552648,45576709,44824176,44819612,44819613,44832307,44828902,44832308,44820791,44833471,44837032,37200896,35209416,37200894,37200895,37200608,37200609,45592144,44820794,35209361,35208270,44833584,35208820,44832312,35209245,44826577,45558154,44834651,45571936,45581637,45557389,45576713,45552651,44825276,44827638,35225407,44821547,35225405,44823825,35209455,35209420,35209435,35209419,44819528,44822958,35206737,44833392,35206734,45567875,45563035,44825364,35206774,44825362,44831155,35206727,44820697,44836941,44824097,35206730,1571476,35209241,35209242,35209239,35209237,35209238,35209240,35209236,35209235,35209243,35209244,44832209,35206726,37200935,37200933,1571524,35209339,35209253,35209252,37200876,35209254,45548663,35209503,35209446,35209356,45558145,35209430,35209463,44833477,45548677,44821879,44825366,44834576,35206770,44819619,35209445,45567865,45553456,35209402,45592133,37200611,45582416,35209343,35209337,35209502,45601764,45592166,35209368,35209331,1571559,35209367,1571519,35209349,35209355,1571537,35209348,35209347,35209345,35209346,1569626,45538533,1569627,45596332,45596331,45552933,45586717,45605939,45572212,1571497,45543861,45543860,45556880,1571591,45534152,1571598,45548684,35209434,45577530,45558153,35209433,44834656,44834655,1571500,45548657,45539039,35209478,35209297,35209231,35209232,35209229,35209227,35209228,35209230,35209226,35209225,35209233,1571475,35209234,44837332,44821546,35225404,1569628,45557658,1569629,45552934,45538534,45567309,45586718,45586719,45605940,44837173,37200885,44819616,35209442,35209340,35209452,35209461,44821549,35225408,44828541,35225406,44831460,37200614,1571539,45548672,1571528,45567847,45577549,45577547,35209432,1571549,45543885,45582414,45582415,37200892,35209362,45606486,920170,1571588,37200612,37200616,35209439,35209449,35209458,44821880,35209482,45567842,35209440,35209450,35209459,44821124,45587257,45600621,45601726,44823191,44826730,44834830,44824341,44827887,44836034,44819814,44831328,44829061,44833657,44825540,44823192,35209292,35209262,35209260,35209261,45548655,1571473,44820966,44829059,35209211,35209212,35209209,35209207,35209208,35209210,35209206,44819813,44831324,44833656,44836033,35209205,35209213,44820967,44820968,35209214,44829060,1571503,35209305,45534136,45592134,45563016,45553444,44824098,44834573,1568449,35208274,35209448,35209422,35209437,35209457,35209465,1571570,1571526,35209247,35209313,1571478,35209258,35209443,35209471,1571530,45577532,1571531,45534133,45582406,45596869,45558159,45558160,45567858,45592139,1571527,45567846,45558158,44836647,44825005,1571585,35206738,35209272,37200610,1571538,1571522,44828904,1571479,1569634,1571571,45592145,1595628,35206732,1571550,45572721,45587252,45587253,1568689,1568690,45571937,45552652,45567024,45552653,1571498,45543863,45553440,35209249,45558183,45577548,35209506,1571501,45539041,45558148,45577546,44821877,44833475,35209381,1571504,1571552,44823048,44828910,44831157,35209300,1571493,1571533,45563020,1571513,1571515,45601719,1571490,37200882,45582413,35209399,45534146,1571568,45543894,35209414,35209412,1571560,35209409,35208821,35206728,44831066,44821804,1567851,35209338,45563006,1571562,45539051,35209330,45543877,1571534,1571600,45548685,44828908,35209287,44821875,45601740,45592140,45596877,1571542,1595627,37200615,35209304,44835767,35206735,1571578,35209421,45563018,1571575,1571579,1571580,35206769,44825283,35209257,37200904,37200903,45534142,37200905,35208832,45562532,1569760,45548686,45572705,45587246,1567864,45542714,44819531,1571484,1570031,1570038,1570033,1570035,1570036,1570037,45586839,45601281,45582016,45601283,45553048,45533698,45596440,45553049,45548265,45601280,45586838,45606052,45543436,45562592,45572339,1570032,45548266,45533699,45601282,45533700,45548264,45557761,45553046,45553047,1570034,44836170,44826574,44820703,45576412,44825277,44836942,1571553,45553448,35209480,1571587,45596889,44825662,1571505,45606490,35209363,45567855,45558146,1571494,35209352,1571536,45596874,1571523,45592136,37200888,35209321,35209326,44827890,44837193,37200931,35209376,35206773,44819532,44828819,35206729,37200926,1571563,45601748,44837334,44832628,35209477,35209494,45581903,35208273,35209447,35209436,35209456,45553463,1571581,44833095,44837813,35209266,1571516,45592135,1571517,44820698,1576285,45552144,1569630,44830158,45572213,1569631,45538535,45596333,45533605,45586721,45552935,45601178,1595626,35209316,1595621,1595624,1595625,1595629,1595630,35209314,45592160,45539042,45534130,35209475,45601721,1571586,45587249,44827354,45590781,45571988,45547904,45576761,45567070,45576762,45591627,45596871,35206736,44831154,44834974,45582423,44834954,1569759,35208432,35208430,35208434,35208429,35208428,45553455,44837034,44836649,45567848,44833478,44831158,44837333,44834973,35208834,44831518,1570617,44831474,45548402,45557865,45591823,45596564,35209424,35209423,1571574,35209428,35209427,35209425,35209426,35209479,1553812,1568688,45533289,45605659,45571935,45600896,44837036,45543869,45543868,45558152,1571511,45577521,1571512,45572707,1595623,45577520,35209493,35209490,35209508,35209509,45587263,45596892,1571541,37200932,37200937,37200938,37200939,45606527,1571601,45534153,45563033,35209511,37200940,37200941,1571592,45567873,1571593,45543907,1595639,45592163,44836948,45586120,45567839,45539045,45534128,1571508,1571510,1571509,45582400,1595622,45548661,37200878,45596864,35209485,37200927,1571535,45582408,45601736,45606496,45592142,35209466,44823050,35209486,44824180,35209469,44826483,44824101,37200917,35209418,37200915,37200916,35209510,37200880,35209329,45577528,45587241,44837172,45534137,44819621,1567863,44834575,45582399,45534125,35209256,44820702,35206768,1571470,35209181,35209182,35209179,35209177,35209178,35209180,35209176,35209175,35209183,35209184,44833479,35209406,1571471,35209191,35209192,35209189,35209187,35209188,35209190,35209186,35209185,35209193,35209194,44835861,35209496,35209302,44834811,44820945,44827872,44825522,44822028,35209265,44829062,44824342,35209291,44829063,45558143,35209267,35209268,45567876,45606500,45582417,45558163,44831487,44825676,1570022,1570017,1570019,1570020,1570021,45606049,45591696,45572335,45533696,45591699,45577101,45601278,45567417,45553043,45601277,45591698,45548260,45606047,45596435,45577102,1570016,45601279,45591697,45572336,45567416,45606048,45553042,45548259,45557760,1570018,1570015,1569966,1570030,1570025,1570027,1570028,1570029,45591700,45572337,45596437,45538633,45548263,45543435,45582014,45553045,45596438,45548261,45606051,45572338,45548262,45596436,45606050,1570024,45596439,45562591,45582015,45567419,45533697,45567418,45543434,45553044,1570026,35208750,1570023,1569991,1569998,1569993,1569995,1569996,1569997,45586837,45553040,45562587,45557756,45562588,45567409,45572329,45577098,45572331,45553039,45582008,45538627,45572330,45562585,45562586,1569992,45557757,45533692,45601276,45548255,45567410,45557755,45586836,45582007,1569994,44826868,1569975,1569982,1569977,1569979,1569980,1569981,45582006,45582004,45577093,45548254,45553037,45591687,45582005,45557754,45601274,45562582,45591688,45548253,45577095,45586834,45543430,1569976,45606040,45543429,45577094,45538623,45567407,45582003,45591686,45567406,1569978,1569999,1570006,1570001,1570003,1570004,1570005,45538628,45606044,45596432,45572333,45533694,45596430,45582009,45577100,45557759,45562589,45533693,45543432,45567412,45596429,45567411,1570000,45572334,45557758,45606045,45548256,45591692,45596431,45572332,45577099,1570002,1570007,1570014,1570009,1570011,1570012,1570013,45582013,45533695,45538631,45582010,45582012,45606046,45591693,45567415,45538632,45567414,45591694,45591695,45548258,45538629,45548257,1570008,45553041,45596434,45543433,45582011,45562590,45596433,45567413,45538630,1570010,1569983,1569990,1569985,1569987,1569988,1569989,45538625,45586835,45606043,45533691,45567408,45553038,45562584,45596428,45591691,45596425,45596426,45577096,45572328,45601275,45543431,1569984,45538626,45591689,45538624,45596427,45591690,45606041,45572327,45606042,1569986,37200884,44832314,1571555,1571558,45543888,45567857,45600622,45571645,45537942,45542723,45557100,1567888,44822863,35206833,35206835,35206834,45557101,1567889,35206836,35206837,45571646,37200887,35209467,35209487,44833660,45577516,44821878,44832311,35209470,35206771,44831071,44834652,44824179,44820699,44831065,44819529,44835766,44824096,44829908,44828818,44836648,35225409,35209295,1571492,44830174,35209294,35209296,44825541,44827718,1571545,45592147,45601742,45563021,1571525,45582404,45548669,45567845,45600382,37200936,37200934,35209325,35209453,35209444,35209384,35209386,35208700,35209431,37200929,35209492,44819941,37200883,37200886,44831064,44822956,44834572,35206772,44825284,45596873,35209454,45592138,45587242,45553460,37200923,37200922,37200919,45553459,37200920,45577541,1571573,37200921,37200918,45539050,45601732,35208271,35209263,1576284,35225412,1571499,45572704,45606487,35209251,35209388,35209389,35209390,44820946,44831313,1569620,45548160,1569621,45576989,45562492,45548161,45538531,45596328,45543317,44819799,1569622,45533602,1569623,45576991,45552930,45567308,45576990,45601177,45552931,44822029,1569624,45538532,1569625,45591594,45552932,45543318,45557657,45562493,45596330,1569619,44829046,44833647,1569632,45572214,1569633,45567311,45586722,45562494,45567310,45533606,45586723,35209342,44819815,35209301,44830157,1595635,1571551,45606501,45577537,45548676,1595633,1568691,45591308,45596060,45571938,45605660,35209489,1571491,44830006,44819622,44833661,1568684,45567023,45591307,45557387,45538250,37200928,37200879,1568678,45605656,45586430,45586429,45576706,44824102,45572699,37200924,44832629,44823049,35209280,1326722,1326724,1326723,35209357,1326725,1326727,1326726,1326716,1326721,1326720,1553811,1326717,1326719,1326718,1326710,1326715,1326714,1553810,1326711,1326713,1326712,1326709,45539055,1595634,35209495,1571474,35209221,35209222,35209219,35209217,35209218,35209220,35209216,35209215,35209223,35209224,44836650,37200901,37200900,45601752,37200902,35209371,35209290,1595638,1595632,1595636,1595637,45601722,35209312,35209320,35209323,35209322,35209319,45543871,35209318,1571514,1571507,45548662,35209317,1595631,35209315,1571506,35209401,45563013,35209284,35209324,35209404,35209405,35209484,35209391,44832313,35209351,1571540,35209308,35209307,1571480,45548648,45572700,1571482,45558136,45553435,45563008,1571481,45582390,45539032,45553434,35209408,44824181,35209464,45539076,45577545,45601761,1571564,45562121,45600819,45566916,45576621,45595975,45600818,45547779,45581529)

) I
) C
;

with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 4)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2006, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 4)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Demographic Criteria
SELECT 0 as index_id, e.person_id, e.event_id
FROM #qualified_events E
JOIN @cdm_database_schema.PERSON P ON P.PERSON_ID = E.PERSON_ID
WHERE YEAR(E.start_date) - P.year_of_birth > 17
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 1)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000199,38000200,38000201,38000202,38000203,38000204,38000205,38000206,38000207,38000208,38000209,38000210,38000211,38000212,38000213,38000214,38000215,38000216,38000217,38000218)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 2)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000199,38000200,38000201,38000202,38000203,38000204,38000205,38000206,38000207,38000208,38000209,38000210,38000211,38000212,38000213,38000214,38000215,38000216,38000217,38000218)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.visit_occurrence_id, C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cns on (o.observation_source_concept_id = cns.concept_id and cns.codeset_id = 2)
) C

WHERE (C.observation_date >= DATEFROMPARTS(2005, 1, 1) and C.observation_date <= DATEFROMPARTS(2017, 12, 31))
AND C.observation_type_concept_id  in (38000199,38000200,38000201,38000202,38000203,38000204,38000205,38000206,38000207,38000208,38000209,38000210,38000211,38000212,38000213,38000214,38000215,38000216,38000217,38000218)
-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 3
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 3)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000199,38000200,38000201,38000202,38000203,38000204,38000205,38000206,38000207,38000208,38000209,38000210,38000211,38000212,38000213,38000214,38000215,38000216,38000217,38000218)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 5)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000199,38000200,38000201,38000202,38000203,38000204,38000205,38000206,38000207,38000208,38000209,38000210,38000211,38000212,38000213,38000214)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id , A.start_date
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 5)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000215,38000216,38000217,38000218)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(DISTINCT cc.start_date) >= 2
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 2 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 5)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000215,38000216,38000217,38000218)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 6)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 13)
) C

WHERE (C.condition_start_date >= DATEFROMPARTS(2005, 1, 1) and C.condition_start_date <= DATEFROMPARTS(2017, 12, 31))
AND C.condition_type_concept_id  in (38000199,38000200,38000201,38000202,38000203,38000204,38000205,38000206,38000207,38000208,38000209,38000210,38000211,38000212,38000213,38000214,38000215,38000216,38000217,38000218)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 6 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_6
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 8)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 7 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_7
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cns on (de.drug_source_concept_id = cns.concept_id and cns.codeset_id = 9)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Device Exposure Criteria
select C.person_id, C.device_exposure_id as event_id, C.device_exposure_start_date as start_date, COALESCE(C.device_exposure_end_date, DATEADD(day,1,C.device_exposure_start_date)) as end_date,
        C.visit_occurrence_id, C.device_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DEVICE_EXPOSURE de
JOIN #Codesets cns on (de.device_source_concept_id = cns.concept_id and cns.codeset_id = 9)
) C

WHERE (C.device_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.device_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Device Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 8 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_8
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 10)
) C

WHERE (C.drug_exposure_start_date >= DATEFROMPARTS(2005, 1, 1) and C.drug_exposure_start_date <= DATEFROMPARTS(2017, 12, 31))
-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_6
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_7
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_8) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;

TRUNCATE TABLE #Inclusion_6;
DROP TABLE #Inclusion_6;

TRUNCATE TABLE #Inclusion_7;
DROP TABLE #Inclusion_7;

TRUNCATE TABLE #Inclusion_8;
DROP TABLE #Inclusion_8;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{9 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),9)-1)
}
)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;

-- custom era strategy

with ctePersons(person_id) as (
	select distinct person_id from #included_events
)

select person_id, drug_exposure_start_date, drug_exposure_end_date
INTO #drugTarget
FROM (
	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE, COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 4 AND de.drug_concept_id = cs.concept_id

	UNION ALL

	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE, COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 4 AND de.drug_source_concept_id = cs.concept_id
) E
;

select et.event_id, et.person_id, ERAS.era_end_date as end_date
INTO #strategy_ends
from #included_events et
JOIN 
(
  select ENDS.person_id, min(drug_exposure_start_date) as era_start_date, DATEADD(day,1, ENDS.era_end_date) as era_end_date
  from
  (
    select de.person_id, de.drug_exposure_start_date, MIN(e.END_DATE) as era_end_date
    FROM #drugTarget DE
    JOIN 
    (
      --cteEndDates
      select PERSON_ID, DATEADD(day,-1 * 63,EVENT_DATE) as END_DATE -- unpad the end date by 63
      FROM
      (
				select PERSON_ID, EVENT_DATE, EVENT_TYPE, 
				MAX(START_ORDINAL) OVER (PARTITION BY PERSON_ID ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal,
				ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY EVENT_DATE, EVENT_TYPE) AS OVERALL_ORD -- this re-numbers the inner UNION so all rows are numbered ordered by the event date
				from
				(
					-- select the start dates, assigning a row number to each
					Select PERSON_ID, DRUG_EXPOSURE_START_DATE AS EVENT_DATE, 0 as EVENT_TYPE, ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY DRUG_EXPOSURE_START_DATE) as START_ORDINAL
					from #drugTarget D

					UNION ALL

					-- add the end dates with NULL as the row number, padding the end dates by 63 to allow a grace period for overlapping ranges.
					select PERSON_ID, DATEADD(day,63,DRUG_EXPOSURE_END_DATE), 1 as EVENT_TYPE, NULL
					FROM #drugTarget D
				) RAWDATA
      ) E
      WHERE 2 * E.START_ORDINAL - E.OVERALL_ORD = 0
    ) E on DE.PERSON_ID = E.PERSON_ID and E.END_DATE >= DE.DRUG_EXPOSURE_START_DATE
    GROUP BY de.person_id, de.drug_exposure_start_date
  ) ENDS
  GROUP BY ENDS.person_id, ENDS.era_end_date
) ERAS on ERAS.person_id = et.person_id 
WHERE et.start_date between ERAS.era_start_date and ERAS.era_end_date;

TRUNCATE TABLE #drugTarget;
DROP TABLE #drugTarget;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
UNION ALL
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

UNION ALL
-- Censor Events
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.DRUG_EXPOSURE_END_DATE, DATEADD(day,C.DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,C.DRUG_EXPOSURE_START_DATE)) as end_date,
       C.visit_occurrence_id,C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Drug Exposure Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id

UNION ALL
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
  C.visit_occurrence_id, C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  
) C

WHERE C.condition_type_concept_id  in (38000199)
-- End Condition Occurrence Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id


),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, CASE WHEN start_date > DATEFROMPARTS(2005, 1, 1) THEN start_date ELSE DATEFROMPARTS(2005, 1, 1) END, CASE WHEN end_date < DATEFROMPARTS(2017, 12, 31) THEN end_date ELSE DATEFROMPARTS(2017, 12, 31) END 
FROM #final_cohort CO
WHERE CASE WHEN start_date > DATEFROMPARTS(2005, 1, 1) THEN start_date ELSE DATEFROMPARTS(2005, 1, 1) END <= CASE WHEN end_date < DATEFROMPARTS(2017, 12, 31) THEN end_date ELSE DATEFROMPARTS(2017, 12, 31) END
;

{0 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;
-- calculate censored
insert into @results_database_schema.cohort_censor_stats (cohort_definition_id, lost_count)
	select @target_cohort_id as cohort_definition_id, coalesce(FCC.total_people - TC.total, 0) as lost_count
	FROM
		(select count_big(distinct person_id) as total_people from #final_cohort) FCC,
		(select count_big(distinct subject_id) as total from @target_database_schema.@target_cohort_table t where t.cohort_definition_id = @target_cohort_id) TC;
-- END: Censored Stats
}
{0 != 0 & 9 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence UNION ALL SELECT CAST(6 as int) as rule_sequence UNION ALL SELECT CAST(7 as int) as rule_sequence UNION ALL SELECT CAST(8 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
